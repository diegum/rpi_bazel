#!/usr/bin/python3 -B

# Copyright 2018 Josh Pieper, jjp@pobox.com.
# Copyright 2021 Diego Dagum, email@diegodagum.com.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os
import shutil
import subprocess
import sys
import tempfile


def download_bazel(dest):
    dist_tempfile = tempfile.NamedTemporaryFile(prefix='bazeldl-', delete=False)
    print(f'dist_tempfile -> {dist_tempfile.name}')

    url = 'https://github.com/bazelbuild/bazel/releases/download/${bazel_version}/' \
          'bazel-${bazel_version}-${host_os}-${bazel_architecture}'

    print('Downloading bazel ${bazel_version} from {}'.format(url), file=sys.stderr, flush=True)

    subprocess.check_call(['curl', '-L', url, '-o', dist_tempfile.name])

    actual_sha256 = subprocess.check_output([
        ${shasum_command}, dist_tempfile.name
    ]).decode('utf-8').split(' ')[0]

    if actual_sha256 != '${bazel_sha}'.lower():
        raise RuntimeError(
            'bazel sha256 does not match, '
            'expected ${bazel_sha} '
            'got {}'.format(actual_sha256))

    subprocess.check_call(['chmod', '+x', dist_tempfile.name])
    shutil.move(dist_tempfile.name, dest)


def main():
    bazel_bin_loc = os.path.join(os.path.expanduser('/opt/bazel/'), '${bazel_version}', 'bazel')

    if not os.path.exists(bazel_bin_loc):
        os.makedirs(os.path.dirname(bazel_bin_loc), exist_ok=True)
        download_bazel(bazel_bin_loc)

    os.execv(bazel_bin_loc, ['bazel', ] + sys.argv[1:])
    assert False


if __name__ == '__main__':
    main()
